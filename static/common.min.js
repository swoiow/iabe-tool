/*! 2017-03-07 */
function getCookie(a) {
    var b = document.cookie.match("\\b" + a + "=([^;]*)\\b");
    return b ? b[1] : void 0
}
function gg(a) {
    var b = document.cookie.match("\\b_xsrf=([^;]*)\\b");
    return a._xsrf = b ? b[1] : void 0, a
}
function gclt() {
    return $lts = new Array, $listGroup = $(".username"), $checkbox = $listGroup.find(".checkbox"), $checkbox.each(function () {
        $(this).checkbox("is checked") && $lts.push($(this).closest("tr").attr("data-uid"))
    }), $lts
}
function msgBox(a, b, c) {
    a = a ? a : "出错啦!!", c = c ? c : 3e3, $(".warning.message").children(".header").text(a), $d = $(".message"), $(".message p").text(b), $d.fadeIn().removeClass("hidden"), setTimeout(function () {
        $d.removeClass("visible").fadeOut().addClass("hidden")
    }, c)
}
function cmts(a, b) {
    if (b.length < 1)return msgBox("请一个或多个帐号。"), resumeButton(a), !1
}
function toggleMenu() {
    m = $(".mobile-view"), p = $(".pc-view"), ww = $(window).width(), ww <= 550 ? (m.show(300), p.hide(250)) : (m.hide(250), p.show(300))
}
function resumeButton(a, b) {
    b = b ? b : 3e3, a.hasClass("disabled") && setTimeout(function () {
        a.removeClass("disabled")
    }, b)
}
$.fn.api.settings.api = {
    "get followers": "/followers/{id}?results={count}",
    "create user": "/create",
    "add user": "/add/{id}",
    "follow user": "/follow/{id}",
    "write syslog": "/search/?query={value}"
};
var gLH = location.hostname, gLP = Number(location.port), gPN = location.pathname, $addr = "http://" + gLH + (gLP ? ":" + gLP : "") + gPN;
$(".message .close").on("click", function () {
    $(this).closest(".message").transition("fade")
}), $(".launch.icon").on("click", function () {
    $(".ui.sidebar").sidebar("toggle")
}), $(window).load(toggleMenu), $(window).resize(toggleMenu), $(".i_pre.button").on("click", function () {
    location.href = $addr + "?pages=" + ($pages - 1 == 0 ? 1 : $pages - 1)
}), $(".i_next.button").on("click", function () {
    location.href = $addr + "?pages=" + ($pages + 1)
}), $(".i_call-cw, .i_call-mn,.i_today-train, .i_call-refresh, .i_call-exchange, .i_note, .i_progress").on("click", function (a) {
    ctx = $(this), ctx.addClass("disabled"), re = /i_[-\w]+/, srcTxt = $(this).attr("class");
    var b = re.exec(srcTxt)[0], c = ctx.closest("tr").attr("data-uid");
    switch (b) {
        case"i_call-cw":
            lts = gclt(), rac = $(a.target).attr("data-type"), jqxhr = $.post({
                url: "/worker/" + rac,
                data: gg({username: lts.toString()}),
                dataType: "json"
            }).done(function (a) {
                msgBox("执行结果", a.rv)
            }).always(resumeButton(ctx));
            break;
        case"i_call-mn":
            lts = gclt(), rac = $(a.target).attr("data-type"), jqxhr = $.post({
                url: "/worker/" + rac,
                data: gg({username: lts.toString()}),
                dataType: "json"
            }).done(function (a) {
                msgBox("执行结果", a.rv)
            }).always(resumeButton(ctx));
            break;
        case"i_today-train":
            jqxhr = $.post({
                context: this,
                url: "/api/users/" + c,
                data: gg({action: "today_train"}),
                dataType: "json"
            }).done(function (a) {
                var b = Number(a.rv);
                $(this).text(b.toFixed(3))
            }).always(resumeButton(ctx));
            break;
        case"i_call-refresh":
            resumeButton(ctx, 5e3), $listGroup = $(".username").find(".checkbox"), $listGroup.each(function () {
                $(this).checkbox("is checked") && $(this).parent().siblings(".i_today-train").click()
            });
            break;
        case"i_call-exchange":
            jqxhr = $.post({
                url: "/api/users/" + gclt()[0],
                data: gg({action: "exchange"}),
                dataType: "json"
            }).done(function (a) {
                msgBox("兑换结果", a.rv)
            }).always(resumeButton(ctx));
            break;
        case"i_note":
            jqxhr = $.post({url: "/api/users/" + c, data: gg({action: "note"}), dataType: "json"}).done(function (a) {
                $(".modal .header").text("帐号" + c.toUpperCase() + "的备注信息："), $(".modal .content").html("<p>" + a.rv + "</p>"), $(".small.modal").modal("show")
            }).always(resumeButton(ctx));
            break;
        case"i_progress":
            jqxhr = $.post({
                url: "/api/users/" + c,
                data: gg({action: "progress"}),
                dataType: "json"
            }).done(function (a) {
                $(".modal .header").text("帐号" + c.toUpperCase() + "的学习进度："), $(".modal .content").html("<p>" + a.rv + "</p>"), $(".small.modal").modal("show")
            }).always(resumeButton(ctx, 3e3))
    }
}), $(".i_slog").api({
    method: "post", url: "/api/logs/{uid}", loadingDuration: 1500, beforeXHR: function (a) {
        return a.setRequestHeader("X-XSRFToken", getCookie("_xsrf")), a
    }, onComplete: function (a) {
        rv = a.rv, h = "", $(".modal .header").text("帐号" + a.account.toUpperCase() + "的日志信息：");
        for (var b = 0; b < rv.length; b++)j = "<pre>" + rv[b] + "</pre>", h += j;
        $(".modal .content").html(h), $(".small.modal").modal("show")
    }
}), $(".i_call-finish").api({
    method: "delete", url: "/api/users/vl", loadingDuration: 1500, beforeSend: function (a) {
        return a.data = gg({username: gclt().toString()}), a
    }, onSuccess: function (a) {
        msgBox("提示", "已标记完成")
    }, onComplete: function (a) {
        setTimeout(function () {
            location.reload()
        }, 1500)
    }
}), $("div.master.checkbox").checkbox({
    onChecked: function () {
        var a = $(".username").find(".checkbox");
        a.checkbox("check")
    }, onUnchecked: function () {
        var a = $(".username").find(".checkbox");
        a.checkbox("uncheck")
    }
}), $("div.checkbox.child").checkbox({
    fireOnInit: !0, onChange: function () {
        var a = $(".username"), b = $(".master.checkbox"), c = a.find(".checkbox"), d = !0, e = !0;
        c.each(function () {
            $(this).checkbox("is checked") ? e = !1 : d = !1
        }), d ? b.checkbox("set checked") : e ? b.checkbox("set unchecked") : b.checkbox("set indeterminate")
    }
}), $("div.checkbox.add").checkbox({
    onChecked: function () {
        $("div.field.input_zone").removeClass("disabled")
    }, onUnchecked: function () {
        $("div.field.input_zone").addClass("disabled")
    }
}), $("div.vl-add.form").form({
    on: "change",
    inline: !0,
    fields: {
        username: {identifier: "username", rules: [{type: "minLength[7]", prompt: "请键入至少一个帐号"}]},
        password: {identifier: "password", rules: [{type: "minLength[4]", prompt: "请键入密码不少于4位"}]}
    }
}), $("div.vl-add button").api({
    method: "post",
    url: "/api/users?method=add",
    loadingDuration: 1500,
    beforeSend: function (a) {
        return $form = $(".vl-add.form"), allFields = $form.form("get values"), a.data = allFields, a
    },
    onSuccess: function (a) {
        msgBox("提示", "添加完成")
    },
    onComplete: function (a) {
        setTimeout(function () {
            location.reload()
        }, 1500)
    }
}), $(".form.wlog button").api({
    method: "post", url: "/api/settings", loadingDuration: 1500, beforeXHR: function (a) {
        return a.setRequestHeader("X-XSRFToken", getCookie("_xsrf")), a
    }, beforeSend: function (a) {
        return a.data = {content: $("input[name='log_content']").val()}, a
    }, onSuccess: function (a) {
        msgBox("提示", "添加完成")
    }, onComplete: function (a) {
        setTimeout(function () {
            location.reload()
        }, 1500)
    }
});
